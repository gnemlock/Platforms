/* Created by Matthew Francis Keating */

using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text.RegularExpressions;

using UnityEditor;

/// <summary> </summary>
public class #SCRIPTNAME# : UnityEditor.AssetModificationProcessor
{
    /// <summary>This method will be called whenever an asset is created from the editor.</summary>
    /// <param name="path">The asset path of the created asset.</param>
    public static void OnWillCreateAsset(string path)
    {
        // Store the direct asset path with any meta extension omitted.
        string assetPath = Regex.Replace(path, @".meta$", string.Empty);

        if(!assetPath.EndsWith(".cs"))
        {
            // If the assetPath does not end with ".cs", this is not a C# script;
            // exit from this method.
            return;
        }

        // Create a placeholder, and store each line in the script, as a list.
        var code = File.ReadAllLines(assetPath).ToList();

        // access code to make corrections

        // Convert the final script list to an array, and store it as a single string, seperated 
        // only by the 'new line' character.
        var finalCode = string.Join("\n", code.ToArray());

        // Write the final code back to the initial asset path, and refresh the asset database.
        File.WriteAllText(assetPath, finalCode);
        AssetDatabase.Refresh();
    }
}